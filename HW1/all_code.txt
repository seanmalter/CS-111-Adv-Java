//draw rectangle
public class DrawRect extends JApplet {
	
	public static final int X_SQUARE = 50;
	public static final int Y_SQUARE = 50;
	public static final int SQUARE_SIZE = 100;
	
	public void paint(Graphics g) {
		g.setColor(Color.GREEN);
		g.fillRect(X_SQUARE, Y_SQUARE, SQUARE_SIZE, SQUARE_SIZE);
		g.setColor(Color.BLUE);
		g.fillOval(X_SQUARE, Y_SQUARE, SQUARE_SIZE, SQUARE_SIZE);
	}
}


//flower
public class Flower extends Applet {
	
	public void paint(Graphics g) {
		g.setColor(Color.BLACK);
		g.fillOval(150, 150, 50, 50);
		g.setColor(Color.YELLOW);
		g.fillOval(150, 50, 50, 100);
		g.fillOval(150, 200, 50, 100);
		g.fillOval(50, 150, 100, 50);
		g.fillOval(200, 150, 100, 50);
	}
}

//cresant moon
public class BullsEye extends JApplet {
	
	public static final int X_START = 15;
	public static final int Y_START = 15;
	public static final int SIZE = 50;
	
	public void paint(Graphics g) {
		
		int i = 0;
		while(i < 5){
			if(i%2 == 0){
				g.setColor(Color.BLUE);
			}
			else{
				g.setColor(Color.GREEN);
			}
			g.fillOval(X_START + 5*i, Y_START + 5*i, SIZE - 10*i, SIZE - 10*i);
			i++;
		}
	}
}

//bulls-eye
public class BullsEye extends JApplet {
	
	public static final int X_START = 15;
	public static final int Y_START = 15;
	public static final int SIZE = 50;
	
	public void paint(Graphics g) {
		
		int i = 0;
		while(i < 5){
			if(i%2 == 0){
				g.setColor(Color.BLUE);
			}
			else{
				g.setColor(Color.GREEN);
			}
			g.fillOval(X_START + 5*i, Y_START + 5*i, SIZE - 10*i, SIZE - 10*i);
			i++;
		}
	}
}

//person drawing
public class Person extends Applet {
	
	public static final int HEAD_SIZE = 20;
	public static final int EYE_SIZE = 5;
	public static final int BODY_HEIGHT = 40;
	public static final int BODY_WIDTH = 30;
	
	public void paint(Graphics g) {
		
		int i, xOffset;
		for(i = 0; i < 3; i++){
			xOffset = 50 + i * 70;
			
			switch(i){
				case 0:
					g.setColor(Color.YELLOW);
					g.fillOval(xOffset, 50, HEAD_SIZE, HEAD_SIZE);
					g.setColor(Color.BLACK);
					g.drawArc( xOffset + 8, 55, 10,10, 180, 180);
					g.fillOval(xOffset + 8, 55, EYE_SIZE, EYE_SIZE);
					g.fillOval(xOffset + 12, 55, EYE_SIZE, EYE_SIZE);
					break;
				case 1:
					g.setColor(Color.RED);
					g.fillOval(xOffset, 50, HEAD_SIZE, HEAD_SIZE);
					g.setColor(Color.BLACK);
					g.drawArc( xOffset + 10, 60, 10,10, 0, 180);
					g.fillOval(xOffset + 8, 55, EYE_SIZE, EYE_SIZE);
					g.fillOval(xOffset + 12, 55, EYE_SIZE, EYE_SIZE);
					break;
				case 2:
					g.setColor(Color.GREEN);
					g.fillOval(xOffset, 50, HEAD_SIZE, HEAD_SIZE);
					g.setColor(Color.BLACK);
					g.fillOval( xOffset + 8, 60, 10,10);
					g.fillOval(xOffset + 8, 55, EYE_SIZE, EYE_SIZE);
					g.fillOval(xOffset + 12, 55, EYE_SIZE, EYE_SIZE);
					break;
			}			
	
			g.drawOval(xOffset - 5, 70, BODY_WIDTH, BODY_HEIGHT);
			g.drawOval(xOffset - 5, 70, BODY_WIDTH, BODY_HEIGHT);
			
			
			//draw arms
	    	g.drawOval(xOffset, 85, 40, 10);
	    	g.drawOval(xOffset + 10, 75, 40, 10);
	    	
	    	//draw legs
	    	g.drawOval(xOffset, 100, 11, 50);
	    	g.drawOval(xOffset + 10, 100, 50, 11);
		}
	}
}

//loop drawing
public class LoopDrawing extends Applet {
	

	public void paint(Graphics g) {
		int i = 0;
		while(i < 50){
			if((i & 1) == 0){
				g.setColor(Color.BLUE);	
			}
			else if((i & 2) == 2){
				g.setColor(Color.GREEN);	
			}
			else if((i & 4) == 4){
				g.setColor(Color.YELLOW);
			}
			g.fillOval(i*20 % 300, i *66 % 300, i * 5, i*3%40);
			i++;
		}	
	}
}
